<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.study.member.dao.IMemberDao">
 
 <sql id="whereClause">
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchJob)">
			AND mem_job =#{searchJob}
		</if>
		
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchLike)">
			AND mem_like =#{searchLike}
		</if>
		
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
			<choose>
				<when test='searchType == "IM"'>AND mem_name LIKE '%' || #{searchWord} || '%' </when>
				<when test='searchType == "ID"'>AND mem_id LIKE '%' || #{searchWord} || '%' </when>
				<when test='searchType == "HP"'>AND mem_hp LIKE '%' || #{searchWord} || '%'</when>
				<when test='searchType == "ADDR"'>AND mem_add1 LIKE '%' || #{searchWord} || '%'</when>
				
			</choose>
		</if>
	</sql>
 
 
 	<select id="getBoardCount" resultType="int" parameterType="com.study.member.vo.MemberSearchVO">
 		SELECT count(*)
		FROM member
		WHERE MEM_DELETE = 'N'
		 OR MEM_DELETE is null
		 
		 <include refid="whereClause" />
		 
 	</select>
  
  <select id="getMember" resultType="com.study.member.vo.MemberVO" parameterType="java.lang.String">
  SELECT mem_id    , mem_pass  , mem_name                                        
	  , TO_CHAR(mem_bir,'YYYY-MM-DD') AS mem_bir                                
	  , mem_zip     , mem_add1                                                  
     , mem_add2  , mem_hp    , mem_mail                                        
     , mem_job                                                                 
     , (select comm_nm FROM comm_code WHERE comm_cd = mem_job) AS mem_job_nm   
     , mem_like                                                                
     , (select comm_nm FROM comm_code WHERE comm_cd = mem_like) AS mem_like_nm 
     , mem_mileage                                                             
     , mem_delete                                                              
  FROM member   
 <![CDATA[                                                                     
 WHERE mem_id = #{memId}    
  ]]>                                                      
  </select>
  
  
  <select id="getMemberList" resultType="com.study.member.vo.MemberVO" parameterType="com.study.member.vo.MemberSearchVO">
  <include refid="common.PRE_PAGING_SQL"/>
  
  SELECT mem_id    , mem_pass  , mem_name         
                 , TO_CHAR(mem_bir,'YYYY-MM-DD') AS mem_bir 
                 , mem_zip     , mem_add1                   
                , mem_add2  , mem_hp    , mem_mail      
                , mem_job                               
                , b.comm_nm AS mem_job_nm				
                , mem_like               		        
                , c.comm_nm AS mem_like_nm			
                , mem_mileage                           
                , mem_delete                            
             FROM member a , comm_code b, comm_code c   
            WHERE mem_job = b.comm_cd   
              AND mem_like = c.comm_cd  
              
 <include refid="whereClause" />
  ORDER BY mem_id DESC 
  <include refid="common.SUF_PAGING_SQL"/>
	 AND (MEM_DELETE = 'N'
		 	OR MEM_DELETE is null)
  </select>
  
  <insert id="insertMember" parameterType="com.study.member.vo.MemberVO" >
		  INSERT INTO member (                           
			      mem_id     , mem_pass   , mem_name     
			    , mem_bir    , mem_zip    , mem_add1     
			    , mem_add2   , mem_hp     , mem_mail     
			    , mem_job    , mem_like   , mem_mileage  
			    , mem_delete                             
			) VALUES (  
	 <![CDATA[ 		                                 
		 #{memId}, #{memPass}, #{memName}
		 ,#{memBir}, #{memZip}, #{memAdd1}
		 ,#{memAdd2}, #{memHp}, #{memMail}
		 ,#{memJob}, #{memLike}, 0 ,'N')		
	]]>                                      
  </insert>
  
  <update id="deleteMember" parameterType="com.study.member.vo.MemberVO">
			UPDATE member
			SET mem_delete = 'Y'
 	 <![CDATA[  
			WHERE mem_id = #{memId}
	]]>
  </update>
  
  <update id="updateMember" parameterType="com.study.member.vo.MemberVO" >
  UPDATE member
   <![CDATA[  
	SET mem_pass = #{memPass}
	  , mem_name = #{memName}
	  , mem_zip =  #{memZip}
	  , mem_add1 = #{memAdd1}
	  , mem_add2 = #{memAdd2}
	  , mem_bir = #{memBir}
	  , mem_mail = #{memMail}
	  , mem_hp = #{memHp}
	  , mem_job = #{memJob}
	  , mem_like = #{memLike}
 WHERE mem_id = #{memId}
 ]]>
  </update>
 </mapper>